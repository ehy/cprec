	lib_misc -- miscellaneous small utility functions



  Copyright (C) 2013 Ed Hynan

  lib_misc is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

Feedback to:

	- Ed Hynan <edhynan@gmail.com>


This is intended to be a *small* archive library of small objects suitable
for linking into an executable.  If it ever grows enough that it should
be made a shared library, it will be a different project.  It is expected
to be included with the sources of some using project, rather than being
a separate dependency.  BTW, it is intended to small.  And small.

It might be, in fact, that this is never distributed separate from the
(original) author's using code.  But if you're reading this you must
have it in front of you, so feel free-but--bound--by--the--GPL--terms
to take it and use it.

Notice two files: Makefile.posix and configure.  In a project using
configure this can be made a subdirectory, but try not to install it;
it doesn't need to be installed on the system unless disc blocks need
to be wasted.  In a project using makefiles, 'make -f Makefile.posix all'
(or 'make -f makefile lib_misc.a') should work[*].  In a project using
neither configure or posix/traditional make, you're on your own.

[*] The explicit target is due to the use of the special target ".POSIX:"
in Makefile.posix.  If a make utility does not recognize the special
nature of that target, it will likely be taken as the default target,
and as it has no dependencies or rules, make will just do nothing.  If
a make utility is fully POSIX (200[34]?) compliant, a target is not
needed.

